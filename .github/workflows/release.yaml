---
name: "release"

# yamllint disable-line rule:truthy
on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: "Bump type"
        default: "patch"
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

permissions:
  attestations: write
  id-token: write
  contents: write

env:
  FOLDER_NAME: "Pakman"
  ZIP_NAME: "Pakman.zip"
  ZIP_TEMPLATE_NAME: "Pakman-TEMPLATE.zip"

jobs:
  build:
    name: build
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        release:
          - "minui all"
          - "nextui tg5040"

    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Compute release info
        id: release-info
        run: |
          distribution="$(echo ${{ matrix.release }} | awk '{print $1}')"
          allowed_platforms="$(echo ${{ matrix.release }} | awk '{print $2}')"
          new_zip_name="$(echo ${{ env.ZIP_TEMPLATE_NAME }} | sed 's/TEMPLATE/$distribution/')"
          echo "distribution=$distribution" >>"$GITHUB_OUTPUT"
          echo "allowed_platforms=$allowed_platforms" >>"$GITHUB_OUTPUT"
          echo "zip_name=$new_zip_name" >>"$GITHUB_OUTPUT"

      - name: Create package for ${{ steps.release-info.outputs.distribution }} on ${{ steps.release-info.outputs.allowed_platforms }}
        id: create-package
        run: |
          make DISTRIBUTION="${{ steps.release-info.outputs.distribution }}" ALLOWED_PLATFORMS="${{ steps.release-info.outputs.allowed_platforms }}" ZIP_NAME="${{ steps.release-info.outputs.zip_name }}"

      - name: Attest Build Provenance
        uses: actions/attest-build-provenance@v2.2.3
        with:
          subject-path: "${{ steps.release-info.outputs.zip_name }}"

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4.6.1
        with:
          name: "${{ steps.release-info.outputs.zip_name }}"
          path: "${{ steps.release-info.outputs.zip_name }}"

  release:
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0

      - name: Download MinUI Artifact
        uses: actions/download-artifact@v4.2.1
        with:
          name: "Pakman-minui.zip"
          path: "Pakman-minui.zip"

      - name: Download NextUI Artifact
        uses: actions/download-artifact@v4.2.1
        with:
          name: "Pakman-nextui.zip"
          path: "Pakman-nextui.zip"

      - name: Get Latest Tag
        id: latest-tag
        run: |
          GIT_LATEST_TAG="$(git describe --tags "$(git rev-list --tags --max-count=1 2>/dev/null || true)" 2>/dev/null || true)"
          if [[ -z "$GIT_LATEST_TAG" ]]; then
            GIT_LATEST_TAG="0.0.0"
          fi
          echo "GIT_LATEST_TAG=${GIT_LATEST_TAG}" >>"$GITHUB_OUTPUT"

      - name: Compute Next Tag
        id: next-tag
        uses: docker://ghcr.io/dokku/semver-generator:latest
        with:
          bump: ${{ github.event.inputs.bump_type }}
          input: ${{ steps.latest-tag.outputs.GIT_LATEST_TAG }}

      - name: Create and Push Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag "$GIT_NEXT_TAG"
          git push origin "$GIT_NEXT_TAG"
        env:
          GIT_NEXT_TAG: ${{ steps.next-tag.outputs.version }}

      - name: Release
        uses: softprops/action-gh-release@v2.2.1
        with:
          files: |
            Pakman-minui.zip
            Pakman-nextui.zip
          generate_release_notes: true
          make_latest: "true"
          tag_name: ${{ steps.next-tag.outputs.version }}
